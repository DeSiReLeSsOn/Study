"""подробнее рассмотрим специальную коллекцию __slots__, которую можно прописывать в любом классе языка Python.
Для простоты восприятия, как всегда, возьму простой класс для представления точки на плоскости:"""  


class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y  


"""Пока в этом классе нет коллекции __slots__. Поэтому, при создании экземпляра этого класса,
мы можем свободно оперировать существующими свойствами:
""" 


pt = Point(1, 2)
pt.x
pt.y = 100 

"""И создавать новые:""" 


pt.z = 4 


"""Но что, если мы хотим объявить класс точки на плоскости, чтобы у его экземпляров были только два свойства: x и y.
Как это сделать? Для этого, как раз и применяется коллекция __slots__.""" 


class Point2D:
    __slots__ = ('x', 'y')
    
    def __init__(self, x, y):
        self.x = x
        self.y = y 


"""Смотрите, мы в кортеже перечисляем атрибуты с именами x и y (указываются в виде строки) и только такие локальные свойства
могут существовать в экземплярах этого класса.
Проверим это. Создадим экземпляр:""" 


pt2 = Point2D(10, 20) 

"""Выведем свойства x и y, убедимся, что они присутствуют в экземпляре:""" 

print(pt2.x ,pt2.y) 

"""Но вот добавить новое уже не получится:""" 


#pt2.z = 30  - будет ошибка AttributeError 

"""Это произошло как раз по тому, что в классе прописана коллекция __slots__ и мы ее можем даже вывести:""" 


print(pt2.__slots__)   


"""А вот привычная нам коллекция __dict__ отсутсвует """ 

print(pt2.__dict__) # коллекция отсутсвует  


"""То есть, класс и его экземпляры ведут себя немного по-другому.
Мы совершенно спокойно можем изменять, удалять и добавлять локальные свойства x, y:""" 

pt2.x = 50
del pt2.y
pt2.y = 100 


"""Но только их и никакие другие. Причем, обратите внимание, речь идет только о локальных свойствах экземпляров.
В сам класс мы по-прежнему можем добавлять любые атрибуты, например, MAX_COORD:""" 


class Point2D:
    __slots__ = ('x', 'y')
    MAX_COORD = 100
 
    def __init__(self, x, y):
        self.x = x
        self.y = y 
    # Тогда в экземплярах этого класса появится это дополнительное свойство со значением 100.
 

"""Вот такие три особенности дает коллекция __slots__ экземплярам класса:

ограничение создаваемых локальных свойств;
уменьшение занимаемой памяти;
ускорение работы с локальными свойствами.""" 




