"""Аббревиатура MRO – method resolution order. А по-русски это переводится как «порядок разрешения методов».
Но! Тоже самое относится не только к методам, но и к прочим атрибутам класса,
так как методы – это частный случай более общего понятия «атрибут».""" 


class O: ...
class A(O): ...
class B(O): ...
class C(O): ...
class D(O): ...
class E(O): ...

class K1(A, B, C): ...
class K2(B, D): ...
class K3(C, D, E): ...

class Z(K1, K2, K3): ... 


"""Метод класса Z.mro() возвращает нам список классов ровно в том порядке,
в котором Python будет искать методы в иерархии классов пока не найдет нужный или не выдаст ошибку.

Конечный класс в цепочке всегда – object; от него неявно наследуются все объекты в Python 3.
Поэтому любое множественное наследование (когда у класса более одного непосредственного родителя)
порождает ромбовидные структуры, потому что все цепочки в конечном счете сходятся в object. 

Для простого ромбовидного наследования MRO будет следующим: C -> A -> B -> object.
Сначала методы ищутся в C, потом в A и B (потому что class C(A, B):), в конце, естественно object.""" 




